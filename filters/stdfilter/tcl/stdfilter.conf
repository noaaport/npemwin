#
# $Id$
#

#
# This file is read after the common configuration file filters.conf.
#

### set stdfilter(rc)		"/usr/local/etc/npemwin/stdfilter.rc";
### set stdfilter(rcdir) 	"/usr/local/etc/npemwin/rc.d/std";
### set stdfilter(lib)		"/usr/local/libexec/npemwin/stdfilter.lib";
### set stdfilter(rcfiles) 	[list];
### set stdfilter(confdirs) $gf(localconfdirs);
### set stdfilter(postrc) 	"";
### set stdfilter(defaultsrc) [list];
#
# The default list of the rule files (as set in the default features.conf).
#
# Enable the inventory
#
### lappend stdfilter(defaultsrc) \
###	"/usr/local/etc/npemwin/defaults/stdfilter-inv.rc";
### set stdfilter(invdir) "/var/npemwin/inv";
### set stdfilter(invfext) ".log";
### set stdfilter(invhhmmfile) [file join $stdfilter(invdir) "hhmm.state"];

# Enable the bookeeping of the "latest" copy
#
### lappend stdfilter(defaultsrc) \
###	"/usr/local/etc/npemwin/defaults/stdfilter-latest.rc";
### set stdfilter(latestdir) [file join $gf(datadir) "latest"];

#
# Read the local overrides from the files
#
# defaults/stdfilter.conf
# site/stdfilter.conf
#
if {[info exists source_stdfilter_conf_defined]} {
    return;
}
set source_stdfilter_conf_defined 1;

set _confname "stdfilter.conf";
foreach _d $stdfilter(confdirs) {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset -nocomplain _d;
unset -nocomplain _localconfname;
unset _confname;

# Read any function definitions that will be used later in the rc file(s).
# First from stdfilter.lib, then from 
#
# defaults/stdfilter.lib
# site/stdfilter.lib
# rc.d/std/*.lib
#
if {[file exists $stdfilter(lib)] == 1} {
    source $stdfilter(lib);
}

set _libname [file tail $stdfilter(lib)]
foreach _d $stdfilter(confdirs) {
    set _locallibname ${_d}/${_libname}
    if {[file exists ${_locallibname}] == 1} {
        source ${_locallibname};
    }
}
unset -nocomplain _d;
unset -nocomplain _locallibname;
unset _libname;

if {[file isdirectory $stdfilter(rcdir)] == 1} {
    set _lib "";
    foreach _lib [glob -nocomplain -directory $stdfilter(rcdir) *.lib] {
    	if {[file exists ${_lib}] == 1} {
            source ${_lib};
    	}
    }
    unset _lib;
}
