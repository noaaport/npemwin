#
# $Id$
# $Format:Commit: %H$
# $Format:Author: <%aE> %aD$
#
# Configuration file for npemwind
# 
# This configuration file uses the tcl language. 
# All options are commented out. What they show are the default
# values hard-coded in the program. 

# npemwind will run as the user specified below, unless those variables
# are unset, in which case it will run as the user that starts
# the program (usually root). If the user and group options are set,
# then the commands equivalent to the following must be executed
# (with the correct user:group)
#
#	chown -R user:group /var/npemwin
#	chown -R user:group /var/run/npemwin
#

# user, group to run as, directory to chdir to, and the default umask
# The supplementary groups can be set by setting the "group" to a
# comma-separated list of groups (including the main group) such as
# "noaaport,news,ldm,..."
#
### set user "noaaport"
### set group "noaaport"
### set home "/var/npemwin"
### set umask 022

# The string that must be sent to BB servers (when npemwin is used as
# a BB client), and how frequently to send it.
#
### set bbclientid	"ByteBlast Client|NM-npemwin@noaaport.net|"
### set bbclientid_secs	300

# directory where the raw data, temporary files, etc, are stored
#
# set spooldir		"/var/npemwin/spool"

# various subdirectories of the spool dir
#
### set datadir		"data"
### set lockdir		"lock"
### set tmpdir		"tmp"
### set qfilesdir	"qfiles"
### set spoolfilemode   0666

# pid file
#
### set pidfile		"/var/run/npemwin/npemwind.pid"
### set pidfilemode     0666

# The server's own statistics file and how often to re-compute them
# and save them (in seconds)
#
### set statusfile	"/var/npemwin/stats/npemwind.status"
### set statsperiod	60

# wx14 signal status
#
### set wx14_signal_statusfile	"/var/npemwin/stats/wx14signal.status"
### set wx14_signal_logfile	"/var/npemwin/stats/wx14signal.log"

# List of bb servers to try
#
### set serverslistfile	"/usr/local/etc/npemwin/servers.conf"

# Where the daemon writes the statstoc of those bb servers
#
### set emwinstatusfile	"/var/npemwin/stats/servers.status"

# The minimum number of consecutive packets that must be received from a server
# in order for the server not to get a bad mark. If this is set to zero
# a server will never receive a bad mark (effectively disabling server
# switching).
#
### set minconsecutivepackets	20

# The maximum number of consecutive bad marks for a server that will
# force an election of a new (the next) server from the list.
# Setting this to zero will disable server switching.
#
### set maxbadpacketcount	3

# If the list of servers is exhausted while the daemon is trying to find
# one available, the daemon sleeps for this number of secods before
# trying the list again.
#
### set retrysleep		60

# The files where the network server writes the status of client connections
# (including the threads' statistics). The "serveractivefile" is also used
# by the bbserver so if that definition is changed here, it must be changed
# in bbserver.conf as well. The "active" has only the current report
# (active connections) while the "state" file is a cummulative log.
#
### set serverstatefile		"/var/npemwin/stats/npemwind.server"
### set serveractivefile	"/var/npemwin/stats/npemwind.active"
### set serverthreadsfile	"/var/npemwin/stats/npemwind.sthreads"

# How long to wait trying to connect to a server before giving up.
# A value of 0 or negative disables the configured timeout,
# and instead uses the os default, which can be something like 75 secs.
#
### set connecttimeout		10

# How long (seconds) to wait for a packet from the server, and how many more
# times to try again, before return it a timeput status.
# With the current (aug2022) infeed.fifo (emftp) mechanism the
# (total) timeout period should not be less than two minutes.
# But that would not let the program do other things after each 2 minute
# timeout. Currently, in loop.c, we are not treating reading timeouts
# from the infeed fifo as errors.

# infeed.fifo (emftp) mechanism we get the bunch of packets every two minutes.
# But using 120 minjutes here  the server would have to wait that long
# before doing anything else. With these settings the program has a chance
# to do other things after each 20 seconds wait.
#
### set readtimeout		5
### set readtimeoutretry	1

# How long (seconds) to wait trying to write a packet to a client, and how many
# more times to try again, before giving up.
#
#
### set writetimeout		1
### set writetimeoutretry	2

# The program that the daemon runs to process the queue (reveived packets)
#
### set qrunner		"/usr/local/libexec/npemwin/qrunner"

# Old: The queue will be processed when this number of packets are received
# New (emftp): The queue will be processed when this number of seconds
# have passed since the last run.
#
### set qrunperiod		120

# When the queue has been processed this number of times,
# an informational message is logged. This can be turned off
# by setting this parameter to 0 (or negative).
#
### set qrunreportperiod	100

# For each product received, the daemon can run an external program
# to decide if it should be discarded or processed. An example
# would be a line like
#
# set prefilter	"/usr/local/libexec/npemwin/prefilter"
# 
# The "prefilter" will be executed with the product name as the argument,
# e.g., cfwsjupr, and it should return 0 if the product should be saved
# and processed, or 1 if it should be discarded.
# There is no default prefilter installed.
#
### set prefilter

# These (tcl) scripts are evaluated by the npemwind daemon itself as the
# last step during the initalization and shutdown phase, respectively.
#
### set startscript	"/usr/local/libexec/npemwind/npemwind-start.tcl"
### set stopscript	"/usr/local/libexec/npemwind/npemwind-stop.tcl"

# The scheduler of periodic tasks
#
### set scheduler "/usr/local/libexec/npemwin/scheduler"

# Whether the httpd is enabled and the path of the tclhttpd script.
# The configuration options specific to the httpd server can be set in
# the file httpd.conf in this same directory.
#
### set httpd_enable		1
### set httpd			"/usr/local/libexec/npemwin/httpd"

# Whether to register with the NWS master host and the parameters
# related to that. It is disabled by default. If enabled here,
# the "bbserver.conf" file must edited to complete the configuration.
#
### set bbserver_enable         0
### set bbserver                "/usr/local/libexec/npemwin/bbserver"

# Where to save the various lists received from the NWS master host. These
# definitions must be in sync with the corresponding ones in bbserver.conf.
#
### set bbserver_mserverlist    "/var/npemwin/stats/mserverlist.txt"
### set bbserver_mserverlist_raw "/var/npemwin/stats/mserverlist.raw"
#
### set bbserver_mserverpublist  "/var/npemwin/stats/mserverpublist.txt"
### set bbserver_mserverpublist_raw  "/var/npemwin/stats/mserverpublist.raw"
#
### set bbserver_mserverdirlist  "/var/npemwin/stats/mserverdirlist.txt"
### set bbserver_mserverdirlist_raw  "/var/npemwin/stats/mserverdirlist.raw"
#
### set bbserver_mserversatlist  "/var/npemwin/stats/mserversatlist.txt"
### set bbserver_mserversatlist_raw  "/var/npemwin/stats/mserversatlist.raw"

# Where the lists of active servers (received from the bb servers themselves)
# are written.
#
### set bbserver_bbserverlist  "/var/npemwin/stats/bbserverlist.txt"
### set bbserver_bbserverlist_raw  "/var/npemwin/stats/bbserverlist.raw"
#
### set bbserver_bbserversatlist  "/var/npemwin/stats/bbserversatlist.txt"
### set bbserver_bbserversatlist_raw  "/var/npemwin/stats/bbserversatlist.raw"

# Name and port to listen for network clients. If the name is not set here
# (the default) then the result returned by gethostname() is used. If
# it is set to "*", npemwind will bind to the ipv4 wildcard 0.0.0.0 address.
# If it is set to "**" it will bind to the ipv6 wildcard 0::0 address.
# Otherwise it wil bind to the given address, or to the first address returned
# by getaddrinfo() for the given name.

# The officially assigned port by IANA is
# 
# emwin           2211/tcp   EMWIN
# emwin           2211/udp   EMWIN
#
### set servername
### set serverport      "2211"

# A value of -1 here allows an unlimited number of network clients.
#
### set maxnetclients   -1

# The protocols served. If a client does not identify within the time given
# in client_id_wait_secs, then it is asumed to be V1. If the compression
# ratio is larger than min_compress_ratio, the packet is sent as V1.
# If the protocol is set to 0 then the server functionality is disabled
# and npemwin operates in client-only mode.
#
# set serverprotocol		0;      # for client-only mode
# 
### set serverprotocol		3;	# 1 => V1, 2 => V2, 3 => both
### set client_id_wait_secs	5
### set min_compress_ratio	60;	# percentage wise

# Configuration for db queues (libconnth). Each entry is an emwin packet
# that occupies QUEUE_PACKET_SIZE bytes (1120). So, a 1 MB cache is about
# 1000 entries.
#
### set client_queue_dbcache_mb		1
#
# Reaching the soft limit generates a warning. The hard limit is an
# absolute maximum. Either or both can be disabled by setting them to 0.
# In any case, the number of entries in each client queue is limited
# by the cache size above.
#
### set client_queue_maxsize_soft 256
### set client_queue_maxsize_hard 512

# Milliseconds timeout reading from client queue.
# 
### set client_queue_timeout_msecs 10000

# How often to report the state of the server connections (seconds)
#
### set serverstate_log_period 60

# How often to write the server threads statistics (in terms of the
# number products processes). They will write an entry in the log file
# after processing this number of packets.
#
### set serverthreads_log_freq 100

#
# Directories containing the local overrrides
#
set npemwindconfdir         "/usr/local/etc/npemwin"
set npemwindlocalconfdirs [list \
	$npemwindconfdir/defaults \
	$npemwindconfdir/site]

# Read the local overrides
set _confname           "npemwind.conf";    

if {[info exists source_npemwind_conf_defined]} {
    return;
}
set source_npemwind_conf_defined 1;

foreach _d $npemwindlocalconfdirs {
    set _localconfname ${_d}/${_confname}
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset _d;
unset _confname;
unset _localconfname;
