#
# $Id$
#
# Configuration for the nbsp additions and functions.
#

### set Config(syslog) 1
### set Config(syslogident) tclhttpd
### set Config(debugurl) 1

# Definitions for the site library functions
#
### set Config(npemwinwwwdir) $Config(home)
### set Config(npemwinlibdir) $Config(library)
### set Config(npemwinhtdocsdir) [file join $Config(npemwinwwwdir) "htdocs"]
### set Config(npemwinhtincludedir) \
	[file join $Config(npemwinhtdocsdir) "include"]
### set Config(npemwinextlibdirs) [list \
###     [file join $Config(prefix) libexec/npemwin/tclhttpd/extensions] \
###     [file join $Config(prefix) libexec/npemwin/tclhttpd/site] \
### ]
#
# These settings must be in sync with those in the npemwind config.
#
###X set Config(fifo)		"/var/run/npemwin/tclhttpd.fifo"
###X set Config(npemwinstatsdir) "/var/npemwin/stats"
###X set Config(npemwinstatusfile) [file join $Config(npemwinstatsdir) \
	"npemwind.status"]
###X set Config(npemwinemwinstatusfile) [file join $Config(npemwinstatsdir) \
	"servers.status"]
###X set Config(npemwinserveractivefile) [file join $Config(npemwinstatsdir) \
	"active"]
###X set Config(npemwinserverthreadsfile) [file join $Config(npemwinstatsdir) \
	"npemwind.sthreads"]
###X set Config(npemwinpidfile)		$npemwind(pidfile)
###X set Config(npemwinactiveserverlist) [file join $Config(npemwinstatsdir) \
	"mserverlist.txt"]

###X set Config(npemwinmetarplothtdir) metarplot;

# This setting must be in sync with the corresponding setting (out_dirname)
# in qrunner.conf.
#
#### set Config(npemwinfilesdir)		"/var/npemwin/files";

# The next four settings must be in sync with those in the inv and metar filters
# (and they are not configurable in httpd.conf).
#
#X set Config(npemwinmetarcldir) /var/npemwin/data/metar/cl
#X set Config(npemwinmetarstdir) /var/npemwin/data/metar/st
#X set Config(npemwininvdir) "/var/npemwin/inv"
#X set Config(npemwininvfext) ".log"
#X set Config(npemwinrssdir) "/var/npemwin/rss/xml"
#X set Config(npemwinrsswfodef) /usr/local/etc/npemwin/rssfilter-wfo.def
#X set Config(npemwinrssfext) ".xml"
#
### Location of the external programs used by the server.
### set env(PATH) "/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin";

#
# Common configuration of tclhttpd
#
### set Config(threads)  0
### set Config(debug) 0
### set Config(compat) 3.3

# docRoot - the name of the file system directory containing
# the root of your document tree.
#
### set Config(docRoot) [file join $Config(home) htdocs/pub]
### set Config(indexFile) "{index,m.index}.{html,tml}"

# host - the name of the server (i.e., www.yourcompany.com)
#
### set Config(host)		[info hostname]

# port - the listening port for the server for HTTP requests.
# The standard web port is 80, but ports below 1023 must be opened by root.
# Since npemwind by default runs as the "noaaport" user the port must
# be 1024 or greater.
#
### set Config(port)		8016

# ipaddr - the IP address of the server's end of the HTTP socket.
# Only specify this if you have a machine with several IP addresses
# and you want the server to only listen on one IP address.
# If this is the empty string, then it will listen on all
# network interfaces for connections.
#
### set Config(ipaddr)	{}

# webmaster - an email address for error mailings
#
### set Config(webmaster)	webmaster@[info hostname]

# secsPerMinute - The seconds-per-minute value used when creating the
# time-based histograms on the /status page.  This should
# be between 1 and 60, inclusive.
#
### set Config(secsPerMinute)	60
### set Config(secs) $Config(secsPerMinute)

# LogFile - the file used for standard logging information.
# This is actually the prefix of the name.  The port and current date stamp
# is append to this file, and it is rolled every night at midnight
#
### set Config(LogFile)	"/var/log/npemwin/www/tclhttpd_"

# LogFlushMinutes - how frequently the log file is flushed to disk.
# Use 0 to have each URL request cause a log flush.
#
### set Config(LogFlushMinutes) 0

# LogDebug - ### set up a debug logfile - default: no
#
### set Config(LogDebug) 0

# Authentication Configuration

# The auth config creates a default authentication array.
# To create passwords for user $u and group $g
# Config Auth {user,$u $password group,$g group}
# Note: these passwords are plaintext, so it's not very secure.
#
# If Auth is undefined, a random password
# is created and logged per invocation of the server
# If Auth is defined (even if empty, it is considered authoritative and
# no default passwords are generated.
#### set Config(Auth) {}
### set Config(AuthDefaultFile) [file join $Config(home) auth/tclhttpd.auth]

# Default password file - used if .htaccess doesn't specify AuthUserFile
# this defaults to the authentication array authdefault()
#### set Config(AuthUserFile) {}

# Default group file - used if .htaccess doesn't specify AuthGroupFile
# this defaults to the authentication array authdefault()
#### set Config(AuthGroupFile) {}

# Default mail servers - the smtp servers to use when sending mail
### set Config(MailServer) {}

#
# Virtual host configuration
#
# set Config(virtual) {
#    {1.warnings.inoaaport.net "/etc/local/nbsp/site/warnings.conf"}
#    {1.metar.inoaaport.net "/etc/local/nbsp/site/metar.conf"}
# }
#
# where "warnings.conf" has, for example,
#
# set Config(docRoot) "$Config(home)/htdocs/pub/digatmos/warnings";
#
# and "metar.conf"
#
# set Config(docRoot) "$Config(home)/htdocs/pub/digatmos/surface";
#

#
# Read the local overrides
#
if {[info exists source_httpd_conf_defined]} {
    return;
}
set source_httpd_conf_defined 1;

set _confname [file tail $Config(config)];
foreach _d $Config(localconfdirs) {
    set _localconfname [file join ${_d} ${_confname}]
    if {[file exists ${_localconfname}] == 1} {
        source ${_localconfname};
    }
}
unset -nocomplain _d;
unset -nocomplain _localconfname;
unset _confname;
